apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlinx-serialization"

android {
    compileSdkVersion Sdk.COMPILE_SDK_VERSION
    defaultConfig {
        applicationId AppCoordinates.APP_ID
        minSdkVersion Sdk.MIN_SDK_VERSION
        targetSdkVersion Sdk.TARGET_SDK_VERSION
        versionCode AppCoordinates.APP_VERSION_CODE
        versionName AppCoordinates.APP_VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        project.hasProperty("OPENWEATHER_API_KEY") ? buildConfigField("String", "OPENWEATHER_API_KEY", OPENWEATHER_API_KEY) : buildConfigField("String", "OPENWEATHER_API_KEY", "\"\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
    }
}

dependencies {
    implementation project (':lib')
    implementation Plugins.KOTLIN
    implementation Coroutines.ANDROID
    implementation SupportLibs.ANDROIDX_APPCOMPAT
    implementation SupportLibs.ANDROIDX_CORE_KTX
    implementation SupportLibs.ANDROIDX_CONSTRAINT_LAYOUT
    testImplementation TestingLib.JUNIT
    androidTestImplementation AndroidTestingLib.ANDROIDX_TEST_EXT_JUNIT
}

// build and run app
task runDebugApp(type: Exec) {
    dependsOn "installDebug"
    def adb = new File("${System.env.ANDROID_HOME}", "platform-tools${File.separator}adb")
    commandLine adb, "shell", "am", "start", "-n", "com.jdoneill.ktmultiplatform/com.jdoneill.ktmultiplatform.ui.MainActivity"
}
